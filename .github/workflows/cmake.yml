name: CMake Build

on:
  release:
    types: [published]
  push:
    branches:
      - 'release/**'
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  VERSION_NAME: ${{ github.event.release.tag_name }}

jobs:
  macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies
      run: |
        brew install libarchive
        brew install yaml-cpp
        brew install ninja

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0
      with:
        version: 5.15.2
        target: desktop

    - name: Configure CMake
      working-directory: ${{github.workspace}}
      run: cmake -DCMAKE_BUILD_TYPE=Release . -G Ninja

    - name: Build
      working-directory: ${{github.workspace}}
      run: ninja
    
    - name: Install Pip in CSMM
      working-directory: ${{github.workspace}}
      run: |
        wget https://bootstrap.pypa.io/get-pip.py
        csmm.app/Contents/MacOS/csmm python get-pip.py
    
    - name: Install Pip Modules In Embedded Python
      working-directory: ${{github.workspace}}
      run: csmm.app/Contents/MacOS/csmm python -m pip install sphinx pillow
    
    - name: Build docs
      working-directory: ${{github.workspace}}/docs
      run: |
        export SPHINXBUILD="${{github.workspace}}/csmm.app/Contents/MacOS/csmm python -m sphinx"
        make html
        cd _build
        zip -r "csmm-$VERSION_NAME-pydocs.zip" html

    - name: Deploy
      working-directory: ${{github.workspace}}
      run: macdeployqt 'csmm.app' -dmg

    - name: Rename
      working-directory: ${{github.workspace}}
      run: mv 'csmm.dmg' "csmm-$VERSION_NAME-macos.dmg"

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{github.workspace}}/csmm-${{github.event.release.tag_name}}-macos.dmg
          ${{github.workspace}}/docs/_build/csmm-${{github.event.release.tag_name}}-pydocs.zip
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0
      with:
        version: 5.15.2
        target: desktop
        arch: win64_msvc2019_64
    
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master
    
    - name: Setup VS Environment
      uses: seanmiddleditch/gha-setup-vsdevenv@master

    - name: Configure CMake
      working-directory: ${{github.workspace}}
      shell: bash
      run: cmake -DCMAKE_BUILD_TYPE=Release . -G Ninja

    - name: Build
      working-directory: ${{github.workspace}}
      run: ninja
    
    - name: Install Pip in CSMM
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        C:/msys64/usr/bin/wget.exe https://bootstrap.pypa.io/get-pip.py
        ./csmm python get-pip.py
    
    - name: Install Pip Modules In Embedded Python
      working-directory: ${{github.workspace}}
      run: ./csmm python -m pip install pillow

    - name: Rename
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        mkdir "csmm-$VERSION_NAME"
        mv "csmm.exe" "csmm-$VERSION_NAME/csmm.exe"

    - name: Deploy
      working-directory: ${{github.workspace}}
      shell: bash
      run: windeployqt "csmm-$VERSION_NAME/csmm.exe"

    - name: Copy dlls
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        PYVER=$(python --version | sed 's/Python //')
        CONDENSEDPYVER=$(echo $PYVER | sed 's/\([0-9]*\)\.\([0-9]*\).*/\1\2/')
        cp "C:\Program Files\OpenSSL\bin\libcrypto-1_1-x64.dll" "csmm-$VERSION_NAME"
        cp "C:\Program Files\OpenSSL\bin\libssl-1_1-x64.dll" "csmm-$VERSION_NAME"
        cp "C:/hostedtoolcache/windows/Python/$PYVER/x64/python$CONDENSEDPYVER.dll" "csmm-$VERSION_NAME"
    
    - name: Copy Python stdlib
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        mkdir "csmm-$VERSION_NAME/py"
        cp -R "py/Lib" "csmm-$VERSION_NAME/py"
    
    - name: Archive
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        directory: ${{github.workspace}}
        filename: csmm-${{github.event.release.tag_name}}-windows.zip
        path: ./csmm-${{github.event.release.tag_name}}/

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/csmm-${{github.event.release.tag_name}}-windows.zip
